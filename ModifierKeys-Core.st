EllipseMorph subclass: #BooleanIndicatorMorph	instanceVariableNames: 'onColor truthBlock'	classVariableNames: ''	poolDictionaries: ''	category: 'ModifierKeys-Core'!!BooleanIndicatorMorph commentStamp: 'tcj 6/11/2020 01:18' prior: 0!BooleanIndicatorMorph new openInWorld!]style[(37)f1!!BooleanIndicatorMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 01:51'!truthBlock	^ truthBlock! !!BooleanIndicatorMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 01:11'!truthBlock: anObject	truthBlock := anObject.! !!BooleanIndicatorMorph methodsFor: 'sizing' stamp: 'tcj 6/11/2020 03:55'!height: aNumber	^ self extent: aNumber @ aNumber! !!BooleanIndicatorMorph methodsFor: 'stepping and presenter' stamp: 'tcj 6/11/2020 01:13'!step	"stolen from Flasher"	super step."	EventSensor default anyModifierKeyPressed"	self truthBlock value		ifTrue: [self color: (onColor alphaMixed: 0.5 with: Color black)]		ifFalse: [self color: onColor]! !!BooleanIndicatorMorph methodsFor: 'stepping and presenter' stamp: 'tcj 6/11/2020 01:52'!stepTime	^ 25! !!BooleanIndicatorMorph methodsFor: 'stepping and presenter' stamp: 'tcj 6/11/2020 01:52'!wantsSteps	^ true! !!BooleanIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:41'!defaultColor	^ self preferredColors 		detect: [:color | Color colorNames includes: color]		ifFound:  [:foundColor | Color colorFrom: foundColor ]		ifNone: [ self error: 'no preferred color choices available' ].! !!BooleanIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/11/2020 01:36'!defaultTruthBlock	^  [ Time now second odd ]! !!BooleanIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:32'!initialize	super initialize.	[ onColor := self defaultColor ] on: Error do: [:e | self inform: 'color not available' ].	truthBlock := self defaultTruthBlock.! !!BooleanIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:34'!preferredColors	^ #( red )! !BooleanIndicatorMorph subclass: #CommandKeyIndicatorMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ModifierKeys-Core'!!CommandKeyIndicatorMorph commentStamp: 'tcj 6/11/2020 01:40' prior: 0!CommandKeyIndicatorMorph new openInWorld!!CommandKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/11/2020 01:40'!defaultTruthBlock	^ [  EventSensor default commandKeyPressed ]! !!CommandKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:34'!preferredColors	^ #( lightBrown )! !BooleanIndicatorMorph subclass: #ControlKeyIndicatorMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ModifierKeys-Core'!!ControlKeyIndicatorMorph commentStamp: 'tcj 6/11/2020 01:41' prior: 0!ControlKeyIndicatorMorph new openInWorld!!ControlKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/11/2020 01:41'!defaultTruthBlock	^ [  EventSensor default controlKeyPressed ]! !!ControlKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:35'!preferredColors	^ #( lightGreen )! !RectangleMorph subclass: #ModifierKeysMorph	instanceVariableNames: 'cmdKeyMorph ctrlKeyMorph optKeyMorph shiftKeyMorph indicatorHeight'	classVariableNames: ''	poolDictionaries: ''	category: 'ModifierKeys-Core'!!ModifierKeysMorph commentStamp: 'tcj 6/11/2020 04:18' prior: 0!This morph is intended to show you the state of the modifier keys.  It uses EventSensor (Sensor) for this.It's pretty bizarre how this works.When under X11 (XQuartz) into a Linux VM, the way these morphs update themselves is surprising to me.Some of the modifier key morphs will update when the key is released.  Others will update only after the key is released but the mouse has also been moved.  In addition:  some of the modifier keys will show as pressed when it's actually /other/ modifier keys that have been pressed."self new openInWorldself openInMainDockingBar
"!]style[(555 25 3),c000123123,!!ModifierKeysMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 10:05'!initialize	super initialize.	"stolen from AbstractMediaEventMorph>>#initialize"		self layoutPolicy: TableLayout new;		listDirection: #leftToRight;		wrapCentering: #topLeft;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		layoutInset: 2.	"indicatorHeight is lazy-initialized by the way"	self addMorphBack: (shiftKeyMorph := ShiftKeyIndicatorMorph new height: self indicatorHeight).	self addMorphBack: (ctrlKeyMorph := ControlKeyIndicatorMorph new height: self indicatorHeight).	self addMorphBack: (optKeyMorph := RawMacOptionKeyIndicatorMorph new height: self indicatorHeight).	self addMorphBack: (cmdKeyMorph := CommandKeyIndicatorMorph new height: self indicatorHeight).		! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!cmdKeyMorph	^ cmdKeyMorph! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!cmdKeyMorph: anObject	cmdKeyMorph := anObject.! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!ctrlKeyMorph	^ ctrlKeyMorph! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!ctrlKeyMorph: anObject	ctrlKeyMorph := anObject.! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 04:03'!indicatorHeight	^ indicatorHeight ifNil: [indicatorHeight := 42 ]! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 04:02'!indicatorHeight: anObject	indicatorHeight := anObject.! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!optKeyMorph	^ optKeyMorph! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!optKeyMorph: anObject	optKeyMorph := anObject.! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!shiftKeyMorph	^ shiftKeyMorph! !!ModifierKeysMorph methodsFor: 'accessing' stamp: 'tcj 6/11/2020 03:52'!shiftKeyMorph: anObject	shiftKeyMorph := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ModifierKeysMorph class	instanceVariableNames: ''!!ModifierKeysMorph class methodsFor: 'as yet unclassified' stamp: 'tcj 6/14/2020 10:05'!openInMainDockingBar	| bar height me | 	[ bar := Project current world mainDockingBars first ]		on: Error		do: [ ^ self inform: 'no docking bars' ].	height := bar height * 0.8.	me := self basicNew		indicatorHeight: height;		initialize; 		yourself.	"cannot call the following in the cascade before #initialize?"	me borderStyle: (BorderStyle simple baseColor: Color transparent; width: 1).	me beTransparent.	"find the search bar or the clock"	bar submorphs detect: [:ea | 		(ea knownName = 'searchBar' ) or: [ea respondsTo: #showSeconds: ]] 			ifFound:[:neighbor | bar addMorph: me after: neighbor ]			ifNone: ["Could not find neighbor morph to place myself. Go anywhere near the end."				bar addMorphNearBack: me].		"self openInMainDockingBar"! !BooleanIndicatorMorph subclass: #RawMacOptionKeyIndicatorMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ModifierKeys-Core'!!RawMacOptionKeyIndicatorMorph commentStamp: 'tcj 6/11/2020 01:42' prior: 0!RawMacOptionKeyIndicatorMorph new openInWorld!!RawMacOptionKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/11/2020 01:42'!defaultTruthBlock	^ [  EventSensor default rawMacOptionKeyPressed ]! !!RawMacOptionKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:35'!preferredColors	^ #( paleMagenta )! !BooleanIndicatorMorph subclass: #ShiftKeyIndicatorMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ModifierKeys-Core'!!ShiftKeyIndicatorMorph commentStamp: 'tcj 6/11/2020 01:39' prior: 0!ShiftKeyIndicatorMorph new openInWorld!!ShiftKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/11/2020 01:38'!defaultTruthBlock	^ [  EventSensor default shiftPressed ]! !!ShiftKeyIndicatorMorph methodsFor: 'initialization' stamp: 'tcj 6/14/2020 09:33'!preferredColors	^ #(seaFoam lightBlue) ! !